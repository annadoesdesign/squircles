import * as React from "react";
import { IconContext, type IconContextValue } from "../core/context";

const paths = {
  fill: "<path fill=\"currentColor\" stroke=\"none\" d=\"M190.809 226a10.66 10.66 0 0 1 13.188.604c4.933 4.275 14.865 8.062 27.531 8.063 4.142 0 8.079-.413 11.677-1.146 5.77-1.173 11.396 2.554 12.573 8.323 1.176 5.772-2.55 11.407-8.323 12.583-5.033 1.025-10.393 1.573-15.927 1.573-12.729 0-25.022-2.932-34.51-8.375-9.489 5.443-21.781 8.375-34.511 8.375-12.729 0-25.022-2.932-34.51-8.375-9.489 5.443-21.781 8.375-34.51 8.375-12.73 0-25.023-2.932-34.511-8.375-9.489 5.442-21.782 8.375-34.51 8.375-5.535 0-10.894-.548-15.928-1.573-5.771-1.176-9.498-6.811-8.322-12.583 1.177-5.769 6.803-9.495 12.573-8.323 3.598.733 7.535 1.145 11.676 1.146 12.667 0 22.598-3.788 27.532-8.063l.77-.604a10.67 10.67 0 0 1 13.199.604c4.933 4.275 14.855 8.062 27.52 8.063 12.665 0 22.587-3.788 27.521-8.063l.781-.604a10.67 10.67 0 0 1 13.198.604c4.488 3.888 13.104 7.36 24.157 7.959 1.116.048 2.239.104 3.364.104 12.666 0 22.587-3.788 27.521-8.063zM121.705 108.021a28.4 28.4 0 0 1 12.594 0c32.52 7.398 60.158 20.528 86.135 40.333 9.054 6.903 12.917 18.532 10.854 29.729-.711 3.86-1.557 8.461-2.552 13.907-.924 5.058-2.186 10.639-3.614 16.333-.651 2.596-3.164 4.31-5.781 3.75-6.813-1.458-12.136-4.022-15.344-6.802a10.66 10.66 0 0 0-13.188-.604l-.781.604c-4.934 4.274-14.856 8.062-27.521 8.062-12.664 0-22.587-3.788-27.521-8.062a10.67 10.67 0 0 0-13.198-.604l-.781.604c-4.934 4.274-14.856 8.062-27.52 8.062-12.666 0-22.588-3.788-27.521-8.062a10.67 10.67 0 0 0-13.198-.604l-.771.604c-3.21 2.781-8.537 5.345-15.354 6.802-2.617.559-5.132-1.154-5.782-3.75-1.425-5.694-2.68-11.276-3.604-16.333-.995-5.446-1.84-10.047-2.552-13.907-2.062-11.197 1.8-22.824 10.854-29.729 25.978-19.805 53.625-32.936 86.146-40.333\"/><path fill=\"currentColor\" stroke=\"none\" d=\"M127.997 42.667c71.11 0 85.333 11.555 85.333 69.333v.813c-.013 4.238-4.806 6.622-8.354 4.302-21.714-14.199-44.861-24.352-71.073-30.927a28.56 28.56 0 0 0-13.875 0c-25.59 6.42-48.264 16.243-69.531 29.916-3.35 2.154-7.834-.121-7.834-4.104 0-57.777 14.225-69.333 85.334-69.333M127.997 0c34.803 0 47.776 5.458 51.771 29.167.617 3.682-2.917 6.602-6.584 5.895C161.56 32.814 146.757 32 127.997 32c-18.763 0-33.563.813-45.188 3.063-3.67.71-7.215-2.22-6.593-5.907C80.214 5.452 93.197 0 127.997 0\"/>",
  regular: "<path fill=\"currentColor\" stroke=\"none\" d=\"M127.998 0c42.489 0 52.453 8.126 53.25 47.677-.086-.026-.174-.047-.261-.073 25.896 7.58 32.344 25.508 32.344 64.396 0 .143-.01.285-.01.427a690 690 0 0 1 13.906 6.511c11.126 5.387 17.831 16.943 16.917 29.27l-.875 10.594c-1.013 11.093-2.46 23.306-4.448 33.198-2.618 13.026-7.7 29.505-12.021 42.479a61 61 0 0 0 4.729.188c4.142 0 8.079-.413 11.677-1.146 5.77-1.173 11.396 2.554 12.573 8.323 1.176 5.772-2.55 11.407-8.323 12.583-5.033 1.025-10.393 1.573-15.927 1.573-12.729 0-25.022-2.932-34.51-8.375-9.489 5.443-21.781 8.375-34.511 8.375-12.729 0-25.022-2.932-34.51-8.375-9.489 5.443-21.781 8.375-34.51 8.375-12.73 0-25.023-2.932-34.511-8.375-9.489 5.442-21.782 8.375-34.51 8.375-5.535 0-10.894-.548-15.928-1.573-5.771-1.176-9.498-6.811-8.322-12.583 1.176-5.769 6.803-9.495 12.572-8.323 3.599.733 7.536 1.145 11.678 1.146 1.626 0 3.208-.07 4.74-.188-3.773-11.326-8.123-25.326-10.907-37.364L17.196 192c-2.65-13.187-4.335-30.501-5.323-43.792-.858-11.559 4.973-22.435 14.875-28.187l2.041-1.083a685 685 0 0 1 13.875-6.511V112c0-38.924 6.462-56.85 32.417-64.417-.113.033-.231.06-.344.094C75.534 8.127 85.51 0 127.998 0m.01 107.219c-10.744 2.501-35.57 8.531-51.51 14.208-11.634 4.144-26.557 10.981-38.417 16.719-3.288 1.591-5.192 4.929-4.927 8.489.978 13.156 2.586 29.348 4.958 41.157 2.381 11.846 7.2 27.583 11.521 40.521l.01.02c.874-.567 1.668-1.134 2.355-1.729l.77-.604a10.67 10.67 0 0 1 13.198.604c4.934 4.275 14.856 8.062 27.521 8.063 12.665 0 22.587-3.788 27.521-8.063l.781-.604a10.67 10.67 0 0 1 13.198.604c4.934 4.275 14.856 8.062 27.521 8.063 12.666 0 22.587-3.788 27.521-8.063l.781-.604a10.66 10.66 0 0 1 13.188.604c.689.597 1.486 1.171 2.364 1.74l.021-.031c4.322-12.939 9.14-28.676 11.521-40.521 2.373-11.809 3.98-28.001 4.958-41.157.264-3.557-1.644-6.897-4.927-8.489-11.858-5.738-26.782-12.574-38.416-16.719-15.935-5.676-40.76-11.705-51.511-14.208M127.998 64c-17.438 0-30.175.726-39.646 2.385-9.45 1.657-13.932 3.959-16.24 5.834-3.427 2.785-7.186 8.884-7.958 31.031a216 216 0 0 1 5.188-1.917c17.351-6.18 43.535-12.503 54.052-14.948a20.4 20.4 0 0 1 9.229 0c10.523 2.447 36.705 8.77 54.052 14.948 1.668.595 3.39 1.229 5.146 1.907-.772-22.14-4.511-28.237-7.938-31.021-2.308-1.875-6.79-4.177-16.239-5.834C158.172 64.726 145.435 64 127.998 64m0-42.667c-10.684 0-17.758.564-22.584 1.605-4.56.984-5.598 2.076-5.666 2.145-.075.075-1.165 1.118-2.146 5.667-.696 3.229-1.163 7.465-1.406 13.115 9.069-.857 19.597-1.198 31.802-1.198 12.19 0 22.709.344 31.771 1.198-.244-5.65-.679-9.886-1.375-13.115-.985-4.563-2.077-5.598-2.146-5.667-.074-.075-1.118-1.164-5.667-2.145-4.825-1.04-11.899-1.605-22.583-1.605\"/>",
  light: "<path fill=\"currentColor\" stroke=\"none\" d=\"M197.081 256.01H58.935c-.097 0-.196-.009-.292-.01h138.708z\"/><path fill=\"currentColor\" stroke=\"none\" d=\"M127.997 0c42.486 0 52.442 8.125 53.24 47.667 25.69 7.62 32.094 25.568 32.094 64.333 0 .143-.011.285-.011.427a691 691 0 0 1 13.906 6.521c11.126 5.387 17.832 16.943 16.917 29.271l-.875 10.593c-1.013 11.093-2.46 23.307-4.448 33.198-2.658 13.225-7.845 30.013-12.208 43.073-.532 1.59-1.226 3.09-1.99 4.532a64 64 0 0 0 6.906.385c4.316 0 8.431-.429 12.209-1.198 4.327-.88 8.554 1.913 9.437 6.24.882 4.329-1.92 8.555-6.25 9.437-4.854.988-10.035 1.521-15.396 1.521-13.014 0-25.373-3.158-34.51-8.813-9.137 5.655-21.495 8.813-34.51 8.813-13.016 0-25.374-3.158-34.511-8.813-9.137 5.655-21.495 8.813-34.51 8.813-13.016-.001-25.374-3.158-34.51-8.813C49.838 252.841 37.48 256 24.465 256c-5.36 0-10.542-.532-15.396-1.521-4.327-.883-7.131-5.109-6.25-9.437.883-4.326 5.111-7.118 9.438-6.24 3.777.769 7.892 1.198 12.208 1.198a64 64 0 0 0 6.875-.385c-.38-.719-.74-1.453-1.062-2.209l-.875-2.323c-3.817-11.426-8.272-25.709-11.105-37.958l-1.104-5.115c-2.65-13.186-4.335-30.501-5.323-43.791-.857-11.56 4.973-22.436 14.875-28.188l2.042-1.083a690 690 0 0 1 13.875-6.511V112c0-38.97 6.477-56.896 32.51-64.448-.145.042-.294.082-.437.125C75.533 8.127 85.51.001 127.997 0m-.979 101.979c-10.598 2.464-35.939 8.606-52.312 14.438-11.922 4.247-27.06 11.185-38.948 16.937-5.248 2.539-8.353 7.926-7.927 13.677.98 13.19 2.61 29.67 5.052 41.823 2.45 12.191 7.366 28.199 11.698 41.167a14.2 14.2 0 0 0 3.083 5.156c2.409-1.171 4.456-2.486 6.073-3.885a8 8 0 0 1 10.479 0c5.555 4.812 16.172 8.707 29.27 8.708 13.099 0 23.716-3.896 29.272-8.708a8 8 0 0 1 10.479 0c5.555 4.812 16.172 8.707 29.271 8.708s23.715-3.896 29.27-8.708l1.188-.855a8.01 8.01 0 0 1 9.292.855c1.613 1.397 3.658 2.715 6.062 3.885 1.378-1.474 2.463-3.209 3.115-5.156 4.332-12.969 9.247-28.975 11.698-41.167 2.442-12.153 4.071-28.633 5.052-41.823.425-5.748-2.685-11.136-7.927-13.677-11.886-5.751-27.027-12.69-38.948-16.937-16.369-5.831-41.709-11.973-52.313-14.438a4.4 4.4 0 0 0-1.979 0m.979-43.312c-17.524 0-30.636.727-40.573 2.468-9.916 1.739-15.38 4.28-18.666 6.948-5.518 4.484-9.426 13.145-10.01 37.334a246 246 0 0 1 10.593-4.073c17.352-6.18 43.535-12.503 54.052-14.948a20.4 20.4 0 0 1 9.229 0c10.524 2.447 36.706 8.769 54.052 14.948 3.358 1.196 6.924 2.579 10.573 4.073-.585-24.191-4.492-32.85-10.01-37.334-3.287-2.668-8.751-5.21-18.667-6.948-9.937-1.74-23.048-2.468-40.573-2.468m0-42.667c-10.789 0-18.319.557-23.708 1.719-5.206 1.123-7.296 2.577-8.313 3.593-1.016 1.018-2.47 3.107-3.593 8.313-.813 3.77-1.315 8.587-1.552 14.833l-.49.063c10.308-1.34 22.728-1.854 37.656-1.854 14.892 0 27.29.522 37.584 1.854-.141-.018-.286-.045-.428-.063-.237-6.246-.728-11.063-1.541-14.833-1.124-5.208-2.577-7.295-3.594-8.312s-3.107-2.471-8.312-3.594c-5.39-1.162-12.92-1.719-23.709-1.719\"/>",
} as const;

export default function BoatShip(props: React.SVGProps<SVGSVGElement> & Partial<IconContextValue>) {
  const ctx = React.useContext(IconContext);
  const { size = ctx.size, color = ctx.color, weight = ctx.weight, mirrored = ctx.mirrored, ...rest } = props;
  const g = paths[weight] ?? paths.regular ?? paths.fill ?? paths.light ?? "";
  const transform = mirrored ? "scale(-1,1) translate(-256,0)" : undefined;

  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 256 256"
      xmlns="http://www.w3.org/2000/svg"
      color={color}
      {...rest}
    >
      <g transform={transform} dangerouslySetInnerHTML={{ __html: g }} />
    </svg>
  );
}