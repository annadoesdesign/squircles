import * as React from "react";
import { IconContext, type IconContextValue } from "../core/context";

const paths = {
  fill: "<path fill=\"currentColor\" stroke=\"none\" fill-rule=\"evenodd\" d=\"M128 0c106.667 0 128 21.333 128 128 0 11.83-.284 22.609-.896 32.427-71.67 2.975-91.704 23.013-94.677 94.688-9.818.611-20.597.885-32.427.885C21.333 256 0 234.667 0 128S21.333 0 128 0M64 128c-5.891 0-10.667 4.776-10.667 10.667S58.11 149.333 64 149.333h85.333c5.891 0 10.667-4.775 10.667-10.666S155.224 128 149.333 128zm0-64c-5.891 0-10.667 4.776-10.667 10.667 0 5.89 4.776 10.666 10.667 10.666h64c5.891 0 10.667-4.775 10.667-10.666S133.891 64 128 64z\" clip-rule=\"evenodd\"/><path fill=\"currentColor\" stroke=\"none\" d=\"M252.958 181.865c-6.623 45.481-25.614 64.481-71.093 71.104.611-12.281 1.771-22.366 3.573-30.719 2.822-13.086 6.919-20.441 11.645-25.167s12.081-8.823 25.167-11.645c8.35-1.801 18.433-2.962 30.708-3.573\"/>",
  regular: "<path fill=\"currentColor\" stroke=\"none\" d=\"M181.333 106.667c5.891 0 10.667 4.775 10.667 10.666S187.224 128 181.333 128H74.667C68.776 128 64 123.224 64 117.333s4.776-10.666 10.667-10.666zM138.667 64c5.891 0 10.666 4.776 10.666 10.667 0 5.89-4.775 10.666-10.666 10.666h-64C68.776 85.333 64 80.558 64 74.667S68.776 64 74.667 64z\"/><path fill=\"currentColor\" stroke=\"none\" d=\"M128 0c24.656 0 45.121 1.218 61.833 4.823 16.832 3.63 30.572 9.832 41.042 20.302s16.672 24.21 20.302 41.042C254.782 82.879 256 103.344 256 128c0 7.441-.119 14.529-.375 21.271h.208l-.666 9.26c-.427 6.804-1.05 13.22-1.896 19.261-.059.418-.127.834-.188 1.25q-.29 1.964-.614 3.875-.158.938-.323 1.864a154 154 0 0 1-1.156 5.761c-.188.845-.373 1.683-.573 2.51q-.283 1.167-.584 2.313-.376 1.429-.781 2.822c-.189.653-.395 1.296-.594 1.938-.287.928-.567 1.847-.875 2.75-.196.576-.409 1.142-.614 1.708-.351.971-.697 1.934-1.073 2.875-.22.55-.469 1.085-.698 1.625-.382.901-.76 1.794-1.167 2.667-.191.411-.396.814-.593 1.219a75 75 0 0 1-1.428 2.823c-.274.507-.568 1.002-.854 1.5-.392.684-.765 1.376-1.177 2.041-6.516 10.529-15.156 18.085-25.875 23.532-.21.106-.413.228-.625.333a79 79 0 0 1-3.427 1.594c-.243.106-.484.218-.729.323a89 89 0 0 1-3.531 1.406c-.326.123-.65.255-.979.375a99 99 0 0 1-3.625 1.229q-.441.142-.886.281a112 112 0 0 1-4.844 1.386q-2.002.527-4.073 1c-.263.06-.526.128-.791.187-5.855 1.299-12.101 2.313-18.75 3.052-7.233.805-15.04 1.301-23.448 1.604l-9.563.407v-.146A643 643 0 0 1 128 256c-24.656 0-45.121-1.218-61.833-4.823-16.832-3.63-30.572-9.832-41.042-20.302s-16.672-24.21-20.302-41.042C1.218 173.121 0 152.656 0 128s1.218-45.121 4.823-61.833c3.63-16.832 9.832-30.572 20.302-41.042S49.335 8.453 66.167 4.823C82.879 1.218 103.344 0 128 0m0 21.333c-24.233 0-42.879 1.227-57.333 4.344-14.335 3.092-23.818 7.89-30.459 14.531s-11.44 16.124-14.53 30.459c-3.118 14.454-4.345 33.1-4.345 57.333s1.227 42.879 4.344 57.333c3.092 14.335 7.89 23.818 14.531 30.459s16.124 11.439 30.459 14.531c14.454 3.117 33.1 4.344 57.333 4.344 4.354 0 8.532-.052 12.542-.136 2.931-27.508 9.96-48.393 25.864-62.541 15.747-14.008 38.308-19.67 67.813-21.688.294-6.825.448-14.239.448-22.302 0-24.233-1.227-42.879-4.344-57.333-3.092-14.335-7.891-23.818-14.531-30.459s-16.124-11.44-30.459-14.53c-14.454-3.118-33.1-4.345-57.333-4.345m104.531 150.479c-26.248 2.105-41.971 7.251-51.948 16.125-9.606 8.549-15.574 22.129-18.458 45.553 24.454-1.959 39.764-6.546 49.813-14.334a42 42 0 0 0 2.135-1.771c9.61-8.547 15.575-22.132 18.458-45.573\"/>",
  light: "<path fill=\"currentColor\" stroke=\"none\" d=\"M181.334 112.001a8 8 0 0 1 0 16H74.667a8 8 0 0 1 0-16zM138.667 69.335a8 8 0 0 1 0 16h-64a8 8 0 1 1 0-16z\"/><path fill=\"currentColor\" stroke=\"none\" d=\"M128 2.668c24.603 0 44.841 1.217 61.271 4.76 16.52 3.564 29.727 9.592 39.719 19.584 9.991 9.991 16.02 23.199 19.583 39.719 3.544 16.43 4.761 36.667 4.761 61.27 0 8.51-.16 16.525-.5 24.063h.125l-.532 7.458c-.139 2.096-.313 4.15-.489 6.167-.053.607-.1 1.212-.156 1.812a250 250 0 0 1-.646 5.959c-.112.932-.222 1.856-.344 2.77a193 193 0 0 1-1.323 8.365c-.175.96-.362 1.907-.552 2.844-.161.795-.318 1.584-.49 2.364-.195.887-.405 1.76-.614 2.625q-.292 1.216-.604 2.407-.314 1.19-.646 2.354c-.261.912-.543 1.809-.823 2.698-.193.612-.381 1.222-.583 1.823a97 97 0 0 1-.938 2.635 85 85 0 0 1-.719 1.896c-.278.7-.571 1.389-.864 2.073a81 81 0 0 1-.969 2.187c-.266.574-.545 1.137-.823 1.698a73 73 0 0 1-1.198 2.334c-.325.6-.67 1.185-1.01 1.77-.315.542-.6 1.097-.927 1.625-.077.124-.163.242-.24.365q-.119.193-.24.385a63 63 0 0 1-2.187 3.209c-.07.096-.148.185-.219.281-6.685 9.083-15.333 15.602-26.052 20.271q-.248.11-.5.219a87 87 0 0 1-3.708 1.479c-.158.058-.311.129-.469.187a95 95 0 0 1-4.167 1.406c-.08.026-.158.059-.239.084q-2.121.665-4.334 1.26-.15.042-.302.084c-7.127 1.893-14.949 3.278-23.5 4.229-4.397.489-9.018.831-13.864 1.125-.57.034-1.143.061-1.719.093-2.516.14-5.091.271-7.729.365l-6.531.281v-.083c-4.407.097-8.975.167-13.709.167-24.603 0-44.84-1.217-61.27-4.761-16.52-3.563-29.728-9.592-39.72-19.583-9.99-9.992-16.02-23.199-19.583-39.719-3.543-16.43-4.76-36.668-4.76-61.271s1.217-44.84 4.76-61.27c3.564-16.52 9.592-29.728 19.584-39.72 9.991-9.99 23.199-16.02 39.719-19.583 16.43-3.543 36.667-4.76 61.27-4.76m0 16c-24.286 0-43.159 1.228-57.895 4.406-14.647 3.16-24.662 8.13-31.782 15.25s-12.09 17.135-15.25 31.782c-3.178 14.736-4.406 33.609-4.406 57.895s1.228 43.159 4.406 57.896c3.16 14.647 8.13 24.662 15.25 31.781 7.12 7.12 17.135 12.091 31.782 15.25 14.736 3.179 33.609 4.407 57.895 4.407 5.225 0 10.203-.088 14.948-.209 2.759-28.425 9.633-49.258 25.229-63.135 15.48-13.77 38.064-19.309 68.594-21.177.373-7.544.563-15.791.563-24.813 0-24.286-1.228-43.159-4.407-57.895-3.159-14.647-8.13-24.662-15.25-31.782s-17.134-12.09-31.781-15.25c-14.737-3.178-33.61-4.406-57.896-4.406m107.542 150.26c-28.343 1.948-45.68 7.183-56.729 17.011-10.766 9.577-16.943 24.799-19.698 50.437 28.353-1.946 45.69-7.171 56.739-17 10.767-9.577 16.935-24.797 19.688-50.448\"/>",
} as const;

export default function NotesWritten(props: React.SVGProps<SVGSVGElement> & Partial<IconContextValue>) {
  const ctx = React.useContext(IconContext);
  const { size = ctx.size, color = ctx.color, weight = ctx.weight, mirrored = ctx.mirrored, ...rest } = props;
  const g = paths[weight] ?? paths.regular ?? paths.fill ?? paths.light ?? "";
  const transform = mirrored ? "scale(-1,1) translate(-256,0)" : undefined;

  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 256 256"
      xmlns="http://www.w3.org/2000/svg"
      color={color}
      {...rest}
    >
      <g transform={transform} dangerouslySetInnerHTML={{ __html: g }} />
    </svg>
  );
}