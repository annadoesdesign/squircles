import * as React from "react";
import { IconContext, type IconContextValue } from "../core/context";

const paths = {
  fill: "<path fill=\"currentColor\" stroke=\"none\" d=\"M127.999 0c19.603 0 37.128 8.827 48.865 22.708a85 85 0 0 0-14.927 4.094 85.3 85.3 0 0 0-30.282 19.52c-4.165 4.166-4.165 10.93 0 15.095 4.166 4.165 10.929 4.165 15.094 0a64 64 0 0 1 49.438-18.615 64 64 0 0 1 25.979 7.417 64 64 0 0 1 20.604 17.49 64 64 0 0 1 11.562 24.426 64 64 0 0 1 1.438 9.25c-2.126 25.506-19.212 46.748-42.458 54.959.007 1.203.02 2.422.02 3.656 0 80-14.222 96-85.333 96-65.194 0-82.57-13.449-85.01-77.333 8.66 2.2 17.628 3.066 26.594 2.479a85.35 85.35 0 0 0 37.083-11.25c5.099-2.946 6.848-9.462 3.906-14.563-2.946-5.101-9.471-6.851-14.573-3.906a64 64 0 0 1-27.812 8.438 64 64 0 0 1-28.49-4.677 64.16 64.16 0 0 1-24.26-17.532 64 64 0 0 1-3.792-4.864q-.246-.353-.49-.709a64 64 0 0 1-8.979-19.52 64 64 0 0 1-2.135-14.23q-.013-.431-.021-.864a64 64 0 0 1 0-2.375c.039-2.801.248-5.558.635-8.26q.243-1.668.573-3.324a64 64 0 0 1 24.886-39.093 64 64 0 0 1 3.333-2.292 64 64 0 0 1 6.25-3.52A64.06 64.06 0 0 1 63.999 32c2.8 0 5.556.193 8.26.542C83.248 13.116 104.09 0 128 0\"/>",
  regular: "<path fill=\"currentColor\" stroke=\"none\" d=\"M128 0c23.909 0 44.741 13.118 55.729 32.542.329-.043.66-.067.99-.105a64 64 0 0 1 2.219-.218c.519-.042 1.039-.086 1.562-.115.836-.046 1.673-.06 2.51-.073.33-.005.659-.031.99-.031.177 0 .354.009.531.01.354.003.708.013 1.063.021.725.018 1.447.042 2.166.084.142.008.286.011.428.02.368.025.736.064 1.104.094.596.049 1.19.102 1.781.167.432.048.861.11 1.292.166q1.2.156 2.385.355.235.04.469.083a64 64 0 0 1 6.271 1.438l.145.041a64 64 0 0 1 6.209 2.125q.109.047.219.094a63.9 63.9 0 0 1 14.593 8.312q.188.145.375.292a64 64 0 0 1 2.177 1.74c.187.157.368.32.552.479q.981.846 1.928 1.729c.222.208.436.424.656.635.499.48.995.963 1.479 1.459a63 63 0 0 1 2.323 2.52c.233.267.469.532.698.803.491.58.966 1.173 1.437 1.77.16.204.332.399.49.605.051.066.095.141.146.208a63.7 63.7 0 0 1 11.291 23.73c.04.163.087.325.125.489.032.137.053.28.084.416q.249 1.108.458 2.23.115.608.219 1.218.172 1.032.312 2.073.078.568.146 1.136c.084.725.149 1.454.208 2.187q.055.64.094 1.281.063 1.017.094 2.042.023.683.031 1.365c.002.194.021.388.021.583 0 .526-.019 1.05-.031 1.573-.008.299-.01.597-.021.896a63.6 63.6 0 0 1-8.219 28.979c-.061.108-.126.215-.187.323-.464.809-.94 1.609-1.438 2.396q-.15.235-.302.468-.644.998-1.323 1.969c-.156.224-.299.456-.458.677l-.031.042a64 64 0 0 1-1.761 2.312q-.31.393-.625.782-.453.552-.916 1.093a64 64 0 0 1-4.553 4.803l-.208.197a63 63 0 0 1-1.625 1.48c-.208.183-.414.371-.625.552a64 64 0 0 1-4.896 3.812c-.268.189-.541.368-.812.552-.464.315-.924.635-1.396.938-.456.293-.922.572-1.385.854-.397.241-.785.497-1.188.729-.144.083-.302.143-.448.219a63.7 63.7 0 0 1-10.239 4.698c.006 1.203.02 2.422.02 3.656 0 80-14.222 96-85.333 96s-85.333-16-85.333-96q0-1.851.01-3.656a63 63 0 0 1-3.114-1.209q-.319-.133-.636-.27a64 64 0 0 1-6.27-3.084c-.261-.146-.524-.287-.782-.437a65 65 0 0 1-2.49-1.531c-.415-.267-.82-.547-1.229-.823a62.664 62.664 0 0 1-3.365-2.438 65 65 0 0 1-1.624-1.302c-.342-.283-.685-.564-1.021-.854a65 65 0 0 1-2.167-1.958c-.367-.348-.724-.706-1.083-1.063a65 65 0 0 1-2.73-2.875 64 64 0 0 1-1.395-1.615 65 65 0 0 1-2.49-3.208c-.097-.134-.206-.261-.302-.396-.159-.221-.302-.453-.458-.677a65 65 0 0 1-1.48-2.208c-.145-.229-.294-.457-.437-.688a64 64 0 0 1-1.729-2.968q-.09-.162-.177-.323a63.55 63.55 0 0 1-7.531-25.802c-.013-.174-.02-.348-.032-.521a65 65 0 0 1-.125-3.073c-.002-.17-.009-.34-.01-.51V96c0-2.362.136-4.694.385-6.99.037-.334.083-.666.125-1 .125-1 .268-1.993.438-2.979l.083-.458a63.6 63.6 0 0 1 10.282-24.917c.081-.118.178-.226.26-.343a64 64 0 0 1 1.833-2.49q.345-.44.698-.875a64 64 0 0 1 1.886-2.25c.114-.13.218-.267.333-.396a64 64 0 0 1 2.417-2.552c.272-.273.555-.534.833-.802a65 65 0 0 1 1.948-1.813l.281-.25c.137-.12.279-.235.417-.354a64 64 0 0 1 2.312-1.896c.171-.134.338-.273.51-.406a64 64 0 0 1 9.615-6.104l.219-.115a64 64 0 0 1 3.26-1.562c.076-.033.154-.06.23-.094a63.5 63.5 0 0 1 10.843-3.625l.26-.062q.167-.037.334-.073a64 64 0 0 1 3.156-.625c.188-.033.375-.073.563-.104q1.463-.242 2.948-.417c.309-.037.617-.083.927-.115a65 65 0 0 1 3.51-.26c.358-.017.716-.02 1.073-.031C62.65 32.02 63.324 32 64 32c.174 0 .347.009.52.01.786.007 1.57.048 2.355.084.529.024 1.058.025 1.583.062 1.017.071 2.03.183 3.042.302.254.03.508.051.76.084C83.248 13.116 104.09 0 128 0m0 21.333c-15.907 0-29.808 8.7-37.167 21.709a21.3 21.3 0 0 1-2.614 3.635c-.04.186-.065.377-.115.563-1.526 5.688-7.373 9.076-13.062 7.552a43 43 0 0 0-6.605-1.209 43 43 0 0 0-4.01-.24c-3.362-.034-6.73.322-10.031 1.084q-.084.021-.167.042A42.7 42.7 0 0 0 40.323 60.5a42.9 42.9 0 0 0-11.51 11.375 42.8 42.8 0 0 0-4.74 9.094 42.8 42.8 0 0 0-2.74 15.156 42.6 42.6 0 0 0 1.677 11.656q.452 1.567 1.021 3.094c4.393 11.79 13.83 21.141 25.75 25.354l.198.073a42.7 42.7 0 0 0 15.417 2.344 42.7 42.7 0 0 0 19.937-5.698c5.101-2.942 11.628-1.193 14.573 3.906 2.943 5.101 1.193 11.627-3.906 14.573a64 64 0 0 1-29.906 8.542c-.698.023-1.397 0-2.094 0V160c0 19.626.892 34.005 2.948 44.729 2.036 10.618 4.918 16.001 7.667 19.094 5.384 6.057 17.045 10.844 53.385 10.844s48.001-4.787 53.385-10.844c2.749-3.093 5.631-8.476 7.667-19.094C191.108 194.005 192 179.626 192 160c0-1.161-.013-2.159-.021-3.531a21.34 21.34 0 0 1 14.229-20.24c16.464-5.814 28.223-21.403 28.438-39.719q.006-.515 0-1.03c-.012-.971-.05-1.933-.125-2.886a43 43 0 0 0-.969-6.281 42.7 42.7 0 0 0-7.583-16.126c-.129-.169-.265-.332-.396-.5a43 43 0 0 0-2.51-2.916 43 43 0 0 0-5.313-4.792 42.74 42.74 0 0 0-20.521-8.323 43 43 0 0 0-4.76-.312q-.672-.006-1.344.01a43 43 0 0 0-3.906.26 42.7 42.7 0 0 0-10.25 2.459 42.7 42.7 0 0 0-15.136 9.76c-4.164 4.162-10.918 4.16-15.083 0-4.164-4.164-4.163-10.917 0-15.083a64 64 0 0 1 15.885-11.604c-7.77-10.814-20.387-17.813-34.635-17.813\"/>",
  light: "<path fill=\"currentColor\" stroke=\"none\" d=\"M128 0c23.909 0 44.741 13.118 55.729 32.542.242-.032.487-.045.729-.073a64 64 0 0 1 3.959-.354q1.44-.08 2.885-.094c.232-.003.465-.021.698-.021h.781c.455.005.91.037 1.365.052.529.017 1.057.032 1.583.063.153.008.306.01.459.02.368.025.736.064 1.104.094.596.049 1.19.102 1.781.167q.715.08 1.427.177.984.131 1.958.292c.387.064.772.137 1.157.208.832.152 1.658.316 2.479.5l.354.083q1.535.354 3.042.782l.145.041a64 64 0 0 1 6.209 2.125q.114.046.229.094c.941.383 1.873.783 2.792 1.208l.333.157a64 64 0 0 1 11.302 6.822c.334.252.661.513.99.771.497.391.993.783 1.479 1.188.352.293.696.595 1.041.896q.703.61 1.386 1.24.515.478 1.021.968a68 68 0 0 1 2.343 2.375c.45.481.888.973 1.323 1.469q.384.434.761.875.723.857 1.416 1.74c.168.213.345.42.511.635.044.057.081.12.125.177a63.7 63.7 0 0 1 11.354 23.948c.024.101.06.2.083.302.02.086.033.174.052.26.168.735.317 1.475.459 2.219q.138.718.26 1.437.167 1.016.302 2.042c.057.42.119.84.167 1.26q.081.723.146 1.448a65 65 0 0 1 .26 5.282c.002.194.021.388.021.583 0 .526-.019 1.05-.031 1.573-.008.299-.01.597-.021.896a63.6 63.6 0 0 1-9.615 31.333q-.328.53-.666 1.052a66 66 0 0 1-1.375 2.011c-.096.135-.175.282-.271.416l-.031.042a64 64 0 0 1-1.761 2.312q-.31.393-.625.782-.478.583-.969 1.156a64 64 0 0 1-4.104 4.365c-.229.222-.465.437-.698.656a64 64 0 0 1-6.791 5.573c-.415.295-.838.579-1.261.864-.402.272-.799.55-1.208.813-.556.357-1.12.701-1.688 1.041-.296.178-.585.369-.885.542-.138.08-.286.138-.427.208a63.7 63.7 0 0 1-10.26 4.709c.006 1.203.02 2.422.02 3.656 0 80-14.222 96-85.333 96s-85.333-16-85.333-96q0-1.851.01-3.656a64 64 0 0 1-2.98-1.156c-.06-.025-.126-.038-.187-.063-.116-.048-.227-.107-.343-.156q-1.35-.57-2.667-1.198c-.145-.069-.294-.128-.437-.198a64 64 0 0 1-2.855-1.479q-.381-.211-.76-.427a65 65 0 0 1-2.198-1.313q-.434-.267-.865-.541a63 63 0 0 1-2.27-1.532c-.32-.225-.633-.456-.948-.687a65 65 0 0 1-1.782-1.354c-.256-.203-.517-.399-.77-.605a64 64 0 0 1-2.23-1.906c-.31-.276-.612-.561-.916-.844a64 64 0 0 1-1.625-1.562c-.204-.203-.414-.399-.615-.604a64 64 0 0 1-2.104-2.261c-.078-.088-.162-.171-.24-.26-.092-.106-.178-.217-.27-.323a64.4 64.4 0 0 1-7.907-11.437q-.146-.271-.291-.542A63.6 63.6 0 0 1 .042 98.333q-.013-.432-.021-.864A65 65 0 0 1 0 96c0-.303.017-.605.02-.906q.012-.782.042-1.563a65 65 0 0 1 .22-3.427c.076-.835.172-1.664.28-2.49.035-.26.057-.521.094-.78C2.24 75.8 6.644 65.683 13.104 57.218c.044-.058.081-.12.125-.177q.171-.22.344-.438a64 64 0 0 1 1.812-2.208q.265-.304.532-.604a64 64 0 0 1 1.656-1.823c.253-.268.502-.54.76-.802a64 64 0 0 1 1.98-1.917c.138-.13.267-.268.406-.396a64 64 0 0 1 5.396-4.437c.184-.136.376-.263.562-.396.82-.59 1.651-1.167 2.5-1.719l.27-.177a63.6 63.6 0 0 1 23.782-9.208c.88-.15 1.765-.273 2.656-.386.39-.05.777-.113 1.167-.156.75-.08 1.504-.133 2.26-.187.396-.03.791-.073 1.188-.094A65 65 0 0 1 64 32c2.8 0 5.556.193 8.26.542C83.248 13.116 104.09 0 128 0m0 16c-17.908 0-33.547 9.803-41.812 24.417a16 16 0 0 1-15.97 7.99A49 49 0 0 0 64 48c-4.74 0-9.32.688-13.646 1.969-2.6.77-5.136 1.772-7.583 2.979q-1.16.569-2.281 1.198a48 48 0 0 0-2.74 1.666 48 48 0 0 0-6.167 4.782 48.3 48.3 0 0 0-7.343 8.5 48 48 0 0 0-8.052 22.77 49 49 0 0 0-.167 4.823c.064 4.554.77 8.95 2.02 13.115q.307 1.013.657 2.011c4.676 13.386 15.104 24.065 28.365 29.072a48 48 0 0 0 20.072 3.011A48 48 0 0 0 88 137.573a7.999 7.999 0 1 1 8 13.854 64 64 0 0 1-27.812 8.438c-3.182.208-6.363.15-9.521-.115v.25c0 19.722.898 34.508 3.052 45.74 2.138 11.149 5.29 17.566 8.906 21.635C77.775 235.416 91.86 240 128 240s50.225-4.584 57.375-12.625c3.617-4.069 6.768-10.486 8.906-21.635 2.154-11.232 3.052-26.018 3.052-45.74 0-1.179-.013-2.233-.02-3.562a16 16 0 0 1 10.666-15.178c18.523-6.542 31.77-24.095 31.99-44.74.004-.343.014-.686.01-1.03a48 48 0 0 0-1.927-13.021 48 48 0 0 0-7.875-15.563 48.3 48.3 0 0 0-7.354-7.687 48 48 0 0 0-8.198-5.552 48 48 0 0 0-4.583-2.146 48 48 0 0 0-7.104-2.26A48 48 0 0 0 192.219 48c-.261-.001-.521.007-.781.01a49 49 0 0 0-5.167.344 48 48 0 0 0-11.177 2.719 48 48 0 0 0-17.031 10.99A7.999 7.999 0 1 1 146.75 50.75a64 64 0 0 1 20.813-13.886C158.889 24.24 144.405 16 128 16\"/>",
} as const;

export default function ChefsHat(props: React.SVGProps<SVGSVGElement> & Partial<IconContextValue>) {
  const ctx = React.useContext(IconContext);
  const { size = ctx.size, color = ctx.color, weight = ctx.weight, mirrored = ctx.mirrored, ...rest } = props;
  const g = paths[weight] ?? paths.regular ?? paths.fill ?? paths.light ?? "";
  const transform = mirrored ? "scale(-1,1) translate(-256,0)" : undefined;

  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 256 256"
      xmlns="http://www.w3.org/2000/svg"
      color={color}
      {...rest}
    >
      <g transform={transform} dangerouslySetInnerHTML={{ __html: g }} />
    </svg>
  );
}