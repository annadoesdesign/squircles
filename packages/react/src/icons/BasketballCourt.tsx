import * as React from "react";
import { IconContext, type IconContextValue } from "../core/context";

const paths = {
  fill: "<path fill=\"currentColor\" stroke=\"none\" d=\"M117.333 64.437c-26.357 2.418-32 16.06-32 63.563s5.643 61.145 32 63.562v53.688c-69.96-.977-99.906-12.321-111.25-53.594 46.115-2.069 57.165-14.592 57.875-58.781L64 128c0-48.158-10.152-61.496-57.937-63.635 11.34-41.293 41.297-52.648 111.27-53.625z\"/><path fill=\"currentColor\" stroke=\"none\" fill-rule=\"evenodd\" d=\"M138.667 10.74C236.103 12.1 256 33.573 256 128c0 94.427-19.897 115.889-117.333 117.25v-53.688c26.357-2.417 32-16.059 32-63.562s-5.643-61.145-32-63.563zm111.25 53.593C202.147 66.476 192.001 79.848 192 128c0 48.156 10.149 61.484 57.927 63.625 1.738-6.33 3.05-13.359 3.99-21.167-8.82-.294-15.762-.915-21.292-1.937-7.884-1.458-11.211-3.409-12.74-4.719-2.675-2.294-6.551-8.467-6.552-35.802.001-27.329 3.877-33.507 6.552-35.802 1.531-1.31 4.862-3.262 12.74-4.719 5.528-1.022 12.468-1.654 21.281-1.948-.941-7.82-2.246-14.86-3.989-21.198\" clip-rule=\"evenodd\"/><path fill=\"currentColor\" stroke=\"none\" d=\"M128 85.333c8.208 0 12.651.676 15.104 1.469 1.673.542 1.694.853 1.813 1.031.586.88 1.951 3.628 2.968 10.698 1.001 6.958 1.448 16.408 1.448 29.469s-.447 22.51-1.448 29.469c-1.016 7.068-2.381 9.817-2.968 10.698-.119.178-.137.488-1.813 1.031-2.453.793-6.896 1.469-15.104 1.469s-12.651-.676-15.104-1.469c-1.676-.543-1.694-.853-1.813-1.031-.587-.881-1.952-3.63-2.968-10.698-1.001-6.959-1.448-16.409-1.448-29.469s.447-22.511 1.448-29.469c1.017-7.07 2.382-9.818 2.968-10.698.119-.178.14-.49 1.813-1.031 2.453-.793 6.896-1.469 15.104-1.469M2.073 85.531c8.823.294 15.77.925 21.302 1.948 7.883 1.458 11.21 3.409 12.74 4.719 2.675 2.293 6.551 8.466 6.552 35.802 0 27.328-3.877 33.507-6.552 35.802-1.53 1.31-4.86 3.261-12.74 4.719-5.532 1.022-12.479 1.633-21.302 1.927C.609 158.27 0 144.21 0 128c0-16.221.606-30.286 2.073-42.469\"/>",
  regular: "<path fill=\"currentColor\" stroke=\"none\" d=\"M128 10.667c106.667 0 128 19.555 128 117.333s-21.333 117.333-128 117.333S0 225.778 0 128 21.333 10.667 128 10.667m-10.667 53.76V32.083c-21.035.305-37.372 1.558-50.198 4.094-14.775 2.922-23.28 7.234-28.718 12.219-4.41 4.043-8.02 9.673-10.782 18.198C57.06 72.156 64.01 88.177 64.01 128l-.041 4.875c-.583 36.271-8.144 51.19-36.334 56.521 2.762 8.53 6.37 14.164 10.782 18.208 5.438 4.985 13.943 9.297 28.718 12.219 12.826 2.536 29.163 3.779 50.198 4.083v-32.354c-26.356-2.418-32-16.049-32-63.552s5.642-61.155 32-63.573m21.334 0c26.358 2.417 32 16.069 32 63.573 0 47.503-5.644 61.134-32 63.552v32.354c21.035-.304 37.372-1.547 50.198-4.083 14.775-2.922 23.28-7.234 28.718-12.219 4.413-4.045 8.01-9.685 10.771-18.219-29.411-5.563-36.343-21.568-36.344-61.385.001-39.813 6.93-55.838 36.334-61.406-2.761-8.521-6.352-14.156-10.761-18.198-5.438-4.985-13.943-9.297-28.718-12.219-12.826-2.536-29.163-3.79-50.198-4.094zM128 85.333c-8.208 0-12.651.676-15.104 1.47-1.676.542-1.694.852-1.813 1.03-.586.88-1.951 3.627-2.968 10.698-1.001 6.959-1.448 16.408-1.448 29.469s.447 22.51 1.448 29.469c1.017 7.071 2.382 9.818 2.968 10.698.119.178.137.488 1.813 1.031 2.453.794 6.896 1.469 15.104 1.469s12.651-.675 15.104-1.469c1.676-.543 1.694-.853 1.813-1.031.586-.88 1.951-3.627 2.968-10.698 1.001-6.959 1.448-16.408 1.448-29.469s-.447-22.51-1.448-29.469c-1.017-7.07-2.382-9.818-2.968-10.698-.119-.178-.137-.488-1.813-1.03-2.453-.794-6.896-1.47-15.104-1.47M23.354 87.47c-1.315 10.68-2.02 23.938-2.02 40.531 0 16.587.706 29.843 2.02 40.521h.031c7.878-1.458 11.212-3.409 12.74-4.719 2.675-2.297 6.552-8.484 6.552-35.802S38.8 94.496 36.125 92.198c-1.528-1.31-4.862-3.26-12.74-4.719zm209.281.01c-7.875 1.457-11.208 3.409-12.739 4.719-2.676 2.293-6.552 8.464-6.552 35.802s3.876 33.509 6.552 35.802c1.34 1.146 4.056 2.78 9.989 4.146l2.75.573c1.315-10.678 2.032-23.933 2.032-40.521 0-16.593-.717-29.84-2.032-40.52\"/>",
  light: "<path fill=\"currentColor\" stroke=\"none\" d=\"M135.875 10.708C235.725 11.702 256 32.678 256 128s-20.276 116.288-120.125 117.281v.052h-16v-.052C20.242 244.255 0 223.243 0 128S20.242 11.745 119.875 10.719v-.052h16zm0 53.51-.562-.03c29.239 1.595 35.354 14.357 35.354 63.812 0 49.136-6.037 62.042-34.792 63.771v37.51c22.551-.23 40.158-1.488 54.021-4.229 15.331-3.031 24.879-7.633 31.292-13.51 5.348-4.903 9.464-11.606 12.489-21.302C199.768 185.584 192 170.116 192 128c0-42.113 7.764-57.612 41.667-62.27-3.024-9.68-7.137-16.374-12.479-21.272-6.413-5.877-15.961-10.479-31.292-13.51-13.863-2.74-31.47-4.009-54.021-4.24zm-16 .011V26.72c-22.43.237-39.96 1.498-53.77 4.229-15.332 3.031-24.88 7.633-31.293 13.51-5.345 4.9-9.465 11.596-12.49 21.282C56.237 70.395 64 85.883 64 128l-.042 4.875c-.618 38.452-9.065 52.913-41.635 57.385 3.024 9.686 7.144 16.382 12.49 21.282 6.412 5.877 15.96 10.479 31.291 13.51 13.812 2.731 31.34 3.981 53.771 4.219V191.75c-28.54-1.789-34.542-14.757-34.542-63.75s6.001-61.982 34.542-63.77M128 191.99l.01.01c1.786 0 3.5-.052 5.146-.115-1.649.059-3.366.105-5.156.105M128 80c-17.442 0-20.084 2.97-21.354 4.875-1.218 1.827-2.744 5.475-3.813 12.906-1.055 7.344-1.5 17.092-1.5 30.219s.445 22.876 1.5 30.219c1.069 7.431 2.595 11.079 3.813 12.906C107.916 173.03 110.558 176 128 176c17.443 0 20.084-2.97 21.354-4.875 1.218-1.827 2.744-5.475 3.813-12.906 1.055-7.343 1.5-17.092 1.5-30.219s-.445-22.875-1.5-30.219c-1.069-7.43-2.595-11.08-3.813-12.906C148.084 82.97 145.442 80 128 80M18.802 81.385C16.924 93.414 16 108.611 16 128c0 19.378.916 34.569 2.792 46.594 1.975-.245 3.824-.504 5.552-.823 8.382-1.551 12.731-3.77 15.24-5.917C44.31 163.799 48 155.161 48 128c0-27.168-3.688-35.8-8.417-39.854-2.507-2.148-6.852-4.365-15.24-5.917a95 95 0 0 0-5.54-.844m218.386 0a95 95 0 0 0-5.532.844c-8.382 1.55-12.731 3.77-15.239 5.917C211.69 92.2 208 100.839 208 128c0 27.168 3.688 35.801 8.417 39.854 2.507 2.148 6.852 4.366 15.239 5.917 1.724.319 3.573.578 5.542.823C239.074 162.569 240 147.378 240 128c0-19.39-.934-34.586-2.812-46.615\"/>",
} as const;

export default function BasketballCourt(props: React.SVGProps<SVGSVGElement> & Partial<IconContextValue>) {
  const ctx = React.useContext(IconContext);
  const { size = ctx.size, color = ctx.color, weight = ctx.weight, mirrored = ctx.mirrored, ...rest } = props;
  const g = paths[weight] ?? paths.regular ?? paths.fill ?? paths.light ?? "";
  const transform = mirrored ? "scale(-1,1) translate(-256,0)" : undefined;

  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 256 256"
      xmlns="http://www.w3.org/2000/svg"
      color={color}
      {...rest}
    >
      <g transform={transform} dangerouslySetInnerHTML={{ __html: g }} />
    </svg>
  );
}