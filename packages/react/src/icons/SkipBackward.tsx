import * as React from "react";
import { IconContext, type IconContextValue } from "../core/context";

const paths = {
  fill: "<path fill=\"currentColor\" stroke=\"none\" d=\"M42.92 29.7c1.28-5.749 6.98-9.381 12.73-8.105 5.746 1.28 9.378 6.982 8.104 12.73a432 432 0 0 0-9.75 72.208A631.3 631.3 0 0 1 183.19 36.418l6.771-2.708 1.396-.469c6.554-1.791 13.421 1.927 15.5 8.396l.364 1.427a433.2 433.2 0 0 1 0 169.896c-1.566 7.825-9.849 12.315-17.26 9.354l-6.771-2.708a631.3 631.3 0 0 1-129.187-70.125 432 432 0 0 0 9.75 72.218c1.275 5.748-2.358 11.45-8.105 12.73-5.75 1.276-11.45-2.355-12.729-8.105a453.2 453.2 0 0 1 0-196.625\"/>",
  regular: "<path fill=\"currentColor\" stroke=\"none\" d=\"M42.92 29.688c1.28-5.748 6.98-9.38 12.73-8.104 5.747 1.278 9.378 6.98 8.104 12.729a432 432 0 0 0-9.75 72.208A631.3 631.3 0 0 1 183.19 36.406l6.771-2.708 1.396-.469c6.554-1.791 13.421 1.927 15.5 8.396l.364 1.427a433.2 433.2 0 0 1 0 169.896c-1.566 7.827-9.849 12.317-17.26 9.354l-6.771-2.708a631.3 631.3 0 0 1-129.187-70.125 432 432 0 0 0 9.75 72.219c1.276 5.748-2.357 11.449-8.104 12.729-5.75 1.276-11.452-2.354-12.73-8.104a453.2 453.2 0 0 1 0-196.625m145.292 27.718A610 610 0 0 0 60.629 128a610 610 0 0 0 127.583 70.583 411.8 411.8 0 0 0 0-141.177\"/>",
  light: "<path fill=\"currentColor\" stroke=\"none\" d=\"M42.859 27.593c.96-4.31 5.24-7.03 9.552-6.073 4.307.962 7.03 5.242 6.072 9.552a434.5 434.5 0 0 0-10.052 78.125 628.7 628.7 0 0 1 133.084-72.979l6.771-2.708 1.104-.375c5.186-1.417 10.616 1.527 12.26 6.646l.292 1.125a430.5 430.5 0 0 1 0 168.854c-1.24 6.19-7.794 9.737-13.656 7.396l-6.771-2.709a628.7 628.7 0 0 1-133.084-72.989 434.5 434.5 0 0 0 10.053 78.135c.957 4.31-1.765 8.59-6.073 9.552-4.312.958-8.592-1.762-9.553-6.073a450.6 450.6 0 0 1 0-195.479m144.604 23.48a612.7 612.7 0 0 0-134.021 74.26 612.7 612.7 0 0 0 134.021 74.26l.104.031a414.5 414.5 0 0 0 0-148.593z\"/>",
} as const;

export default function SkipBackward(props: React.SVGProps<SVGSVGElement> & Partial<IconContextValue>) {
  const ctx = React.useContext(IconContext);
  const { size = ctx.size, color = ctx.color, weight = ctx.weight, mirrored = ctx.mirrored, ...rest } = props;
  const g = paths[weight] ?? paths.regular ?? paths.fill ?? paths.light ?? "";
  const transform = mirrored ? "scale(-1,1) translate(-256,0)" : undefined;

  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 256 256"
      xmlns="http://www.w3.org/2000/svg"
      color={color}
      {...rest}
    >
      <g transform={transform} dangerouslySetInnerHTML={{ __html: g }} />
    </svg>
  );
}