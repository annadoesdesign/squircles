import * as React from "react";
import { IconContext, type IconContextValue } from "../core/context";

const paths = {
  fill: "<path fill=\"currentColor\" stroke=\"none\" d=\"M245.331 149.332c0-35.346-28.653-64-63.999-64q-.378 0-.755.005c-5.174-36.186-36.294-64.004-73.911-64.004C65.429 21.333 32 54.763 32 95.999q0 2.753.196 5.455c-13.207 11.724-21.529 28.829-21.529 47.878 0 27.866 17.81 55.214 42.668 64a223.8 223.8 0 0 0 149.332 0c24.857-8.786 42.664-36.134 42.664-64\"/>",
  regular: "<path fill=\"currentColor\" stroke=\"none\" d=\"M234.667 149.334c0-29.455-23.879-53.333-53.334-53.334q-.318-.001-.635 0a10.66 10.66 0 0 1-10.677-9.156C165.586 55.84 138.899 32.001 106.667 32c-35.346 0-64 28.654-64 64q0 2.368.166 4.688a10.66 10.66 0 0 1-3.552 8.739c-11.023 9.786-17.948 24.034-17.948 39.907 0 23.889 15.453 46.83 35.552 53.937a213.17 213.17 0 0 0 142.23 0c20.098-7.106 35.551-30.047 35.552-53.937m21.333 0c0 31.838-20.168 63.585-49.781 74.052-50.669 17.908-105.769 17.909-156.438 0C20.17 212.919.001 181.173 0 149.334c0-20.347 8.158-38.794 21.344-52.25q-.009-.541-.01-1.084c0-47.128 38.205-85.333 85.333-85.333 39.921 0 73.403 27.411 82.729 64.438C226.84 79.125 256 110.822 256 149.334\"/>",
  light: "<path fill=\"currentColor\" stroke=\"none\" d=\"M237.334 149.333c0-30.927-25.073-56-56-56q-.334-.001-.667 0a8 8 0 0 1-8.01-6.865c-4.619-32.3-32.411-57.135-65.99-57.135C69.848 29.333 40 59.181 40 96q.002 2.46.177 4.875a8.01 8.01 0 0 1-2.666 6.562c-11.57 10.27-18.844 25.229-18.844 41.896 0 24.885 16.043 48.933 37.333 56.458a215.8 215.8 0 0 0 144 0c21.29-7.524 37.333-31.573 37.334-56.458m16 0c-.001 30.845-19.576 61.495-48 71.542a231.83 231.83 0 0 1-154.667 0c-28.423-10.047-48-40.697-48-71.542 0-20.026 8.18-38.156 21.365-51.198A84 84 0 0 1 24 96c0-45.655 37.012-82.667 82.667-82.667 39.331 0 72.223 27.464 80.594 64.26 36.99 3.016 66.073 33.973 66.073 71.74\"/>",
} as const;

export default function Cloud(props: React.SVGProps<SVGSVGElement> & Partial<IconContextValue>) {
  const ctx = React.useContext(IconContext);
  const { size = ctx.size, color = ctx.color, weight = ctx.weight, mirrored = ctx.mirrored, ...rest } = props;
  const g = paths[weight] ?? paths.regular ?? paths.fill ?? paths.light ?? "";
  const transform = mirrored ? "scale(-1,1) translate(-256,0)" : undefined;

  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 256 256"
      xmlns="http://www.w3.org/2000/svg"
      color={color}
      {...rest}
    >
      <g transform={transform} dangerouslySetInnerHTML={{ __html: g }} />
    </svg>
  );
}