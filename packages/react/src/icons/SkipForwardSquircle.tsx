import * as React from "react";
import { IconContext, type IconContextValue } from "../core/context";

const paths = {
  fill: "<path fill=\"currentColor\" stroke=\"none\" d=\"M180.271 64.052c5.86-.586 11.089 3.692 11.677 9.552a546.7 546.7 0 0 1 0 108.792c-.588 5.86-5.816 10.138-11.677 9.552s-10.138-5.816-9.552-11.677c1.228-12.287 2-24.608 2.354-36.938a398.7 398.7 0 0 1-83.469 45.625l-4.229 1.688c-6.955 2.782-14.729-1.426-16.198-8.771a274.7 274.7 0 0 1 0-107.75l.354-1.344c2.092-6.502 9.325-10.034 15.844-7.427l4.23 1.688a398.7 398.7 0 0 1 83.468 45.614 522 522 0 0 0-2.354-36.927c-.585-5.86 3.691-11.09 9.552-11.677\"/><path fill=\"currentColor\" stroke=\"none\" fill-rule=\"evenodd\" d=\"M128 0c106.667 0 128 21.333 128 128s-21.333 128-128 128S0 234.667 0 128 21.333 0 128 0m0 21.333c-26.243 0-45.758 1.342-60.5 4.521-14.502 3.128-22.913 7.726-28.417 13.23-5.503 5.503-10.1 13.914-13.229 28.416-3.18 14.742-4.52 34.257-4.52 60.5s1.34 45.758 4.52 60.5c3.128 14.502 7.726 22.913 13.23 28.417 5.503 5.504 13.914 10.101 28.416 13.229 14.742 3.179 34.257 4.521 60.5 4.521s45.758-1.342 60.5-4.521c14.502-3.128 22.913-7.725 28.417-13.229s10.101-13.915 13.229-28.417c3.179-14.742 4.521-34.257 4.521-60.5s-1.342-45.758-4.521-60.5c-3.128-14.502-7.725-22.913-13.229-28.417-5.504-5.503-13.915-10.1-28.417-13.229-14.742-3.18-34.257-4.52-60.5-4.52\" clip-rule=\"evenodd\"/>",
  regular: "<path fill=\"currentColor\" stroke=\"none\" d=\"M180.271 64.052c5.86-.586 11.089 3.692 11.677 9.552a546.7 546.7 0 0 1 0 108.792c-.588 5.86-5.816 10.138-11.677 9.552s-10.138-5.816-9.552-11.677a526 526 0 0 0 2.375-36.958 398.6 398.6 0 0 1-83.49 45.645l-4.229 1.688c-6.955 2.782-14.729-1.426-16.198-8.771a274.7 274.7 0 0 1 0-107.75l.354-1.344c2.093-6.5 9.326-10.034 15.844-7.427l4.23 1.688a398.7 398.7 0 0 1 83.489 45.635 525 525 0 0 0-2.375-36.948c-.585-5.86 3.691-11.09 9.552-11.677M88.125 89.5a253.4 253.4 0 0 0 0 76.99A377.3 377.3 0 0 0 157.823 128a377.2 377.2 0 0 0-69.698-38.5\"/><path fill=\"currentColor\" stroke=\"none\" d=\"M128 0c106.667 0 128 21.333 128 128s-21.333 128-128 128S0 234.667 0 128 21.333 0 128 0m0 21.333c-26.243 0-45.758 1.342-60.5 4.521-14.502 3.128-22.913 7.726-28.417 13.23-5.503 5.503-10.1 13.914-13.229 28.416-3.18 14.742-4.52 34.257-4.52 60.5s1.34 45.758 4.52 60.5c3.128 14.502 7.726 22.913 13.23 28.417 5.503 5.504 13.914 10.101 28.416 13.229 14.742 3.179 34.257 4.521 60.5 4.521s45.758-1.342 60.5-4.521c14.502-3.128 22.913-7.725 28.417-13.229s10.101-13.915 13.229-28.417c3.179-14.742 4.521-34.257 4.521-60.5s-1.342-45.758-4.521-60.5c-3.128-14.502-7.725-22.913-13.229-28.417-5.504-5.503-13.915-10.1-28.417-13.229-14.742-3.18-34.257-4.52-60.5-4.52\"/>",
  light: "<path fill=\"currentColor\" stroke=\"none\" d=\"M180.542 66.708c4.393-.437 8.309 2.773 8.75 7.167a544 544 0 0 1 0 108.25c-.44 4.395-4.356 7.604-8.75 7.167a8.006 8.006 0 0 1-7.167-8.761 528 528 0 0 0 2.51-42.541 396 396 0 0 1-87.27 48.489l-4.23 1.698c-5.406 2.162-11.45-1.114-12.593-6.823a272.1 272.1 0 0 1 0-106.708l.27-1.042c1.518-4.717 6.523-7.431 11.303-6.125l1.02.344 4.23 1.698A396 396 0 0 1 175.885 118a528 528 0 0 0-2.51-42.542 8 8 0 0 1 7.167-8.75M86.032 85.74a256 256 0 0 0 0 84.51A380 380 0 0 0 162.426 128a380 380 0 0 0-76.396-42.26\"/><path fill=\"currentColor\" stroke=\"none\" d=\"M128 0c106.667 0 128 21.333 128 128s-21.333 128-128 128S0 234.667 0 128 21.333 0 128 0m0 16c-26.348 0-46.319 1.334-61.625 4.635-15.127 3.263-24.601 8.216-31.062 14.677S23.898 51.249 20.635 66.376C17.335 81.681 16 101.652 16 128s1.334 46.319 4.635 61.625c3.263 15.127 8.216 24.601 14.677 31.063s15.936 11.414 31.063 14.677C81.681 238.666 101.652 240 128 240s46.319-1.334 61.625-4.635c15.127-3.263 24.601-8.216 31.063-14.677s11.414-15.936 14.677-31.063C238.666 174.319 240 154.348 240 128s-1.334-46.319-4.635-61.625c-3.263-15.127-8.216-24.601-14.677-31.062s-15.936-11.415-31.063-14.678C174.319 17.335 154.348 16 128 16\"/>",
} as const;

export default function SkipForwardSquircle(props: React.SVGProps<SVGSVGElement> & Partial<IconContextValue>) {
  const ctx = React.useContext(IconContext);
  const { size = ctx.size, color = ctx.color, weight = ctx.weight, mirrored = ctx.mirrored, ...rest } = props;
  const g = paths[weight] ?? paths.regular ?? paths.fill ?? paths.light ?? "";
  const transform = mirrored ? "scale(-1,1) translate(-256,0)" : undefined;

  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 256 256"
      xmlns="http://www.w3.org/2000/svg"
      color={color}
      {...rest}
    >
      <g transform={transform} dangerouslySetInnerHTML={{ __html: g }} />
    </svg>
  );
}