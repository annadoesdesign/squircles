import * as React from "react";
import { IconContext, type IconContextValue } from "../core/context";

const paths = {
  fill: "<path fill=\"currentColor\" stroke=\"none\" fill-rule=\"evenodd\" d=\"M126.635 0c66.563 0 88.789 11.697 94.386 64.27C248.651 76.14 256 99.66 256 144c0 49.526-9.173 73.055-45.531 83.406C202.237 249.951 175.906 256 128 256l-6.354-.042c-43.89-.541-68.24-7.029-76.104-28.552C9.176 217.056 0 193.53 0 144c0-42.745 6.828-66.145 32.073-78.406C37.438 11.889 59.513 0 126.635 0M71.302 170.667c-2.079 5.443-3.914 11.971-5.354 19.843-4.864 26.587.38 32.651 3.646 35.146 2.883 2.203 8.303 4.695 18.458 6.469 10.047 1.755 23.108 2.542 39.948 2.542s29.901-.787 39.948-2.542c10.155-1.774 15.575-4.266 18.458-6.469 3.266-2.495 8.51-8.559 3.646-35.146-1.441-7.874-3.283-14.4-5.364-19.843zM181.333 96c-5.891 0-10.666 4.776-10.666 10.667s4.775 10.666 10.666 10.666h21.334c5.891 0 10.666-4.775 10.666-10.666S208.558 96 202.667 96zm-54.698-74.667c-19.545 0-33.632 1.066-44.01 3.427-10.068 2.293-15.266 5.505-18.5 8.917-3.328 3.514-6.559 9.338-8.833 20.469-.279 1.363-.55 2.782-.792 4.26 18.225-3.752 42.183-5.073 73.5-5.073 29.701 0 52.785 1.178 70.635 4.5-.21-1.271-.414-2.502-.656-3.687-2.274-11.13-5.506-16.955-8.833-20.469-3.233-3.412-8.433-6.624-18.5-8.917-10.377-2.362-24.465-3.427-44.011-3.427\" clip-rule=\"evenodd\"/>",
  regular: "<path fill=\"currentColor\" stroke=\"none\" d=\"M192 96c5.891 0 10.667 4.776 10.667 10.667s-4.776 10.666-10.667 10.666h-10.667c-5.891 0-10.666-4.775-10.666-10.666S175.442 96 181.333 96z\"/><path fill=\"currentColor\" stroke=\"none\" d=\"M126.635 0c66.563 0 88.789 11.697 94.386 64.27C248.651 76.14 256 99.66 256 144c0 49.525-9.176 73.044-45.531 83.396C202.24 249.948 175.913 256 128 256l-6.354-.042c-43.89-.541-68.24-7.029-76.104-28.552C9.176 217.056 0 193.53 0 144c0-42.745 6.828-66.145 32.073-78.406C37.438 11.889 59.513 0 126.635 0M71.312 170.667c-2.08 5.443-3.923 11.969-5.364 19.843-4.864 26.587.38 32.651 3.646 35.146 2.883 2.203 8.303 4.695 18.458 6.469 10.047 1.755 23.108 2.542 39.948 2.542s29.901-.787 39.948-2.542c10.155-1.774 15.575-4.266 18.458-6.469 3.266-2.495 8.51-8.559 3.646-35.146-1.441-7.874-3.283-14.4-5.364-19.843zm56.688-96c-26.377 0-46.415.954-61.781 3.302-15.443 2.36-24.397 5.884-29.886 9.77-9.13 6.468-15 18.598-15 56.261s5.87 49.793 15 56.26c1.755 1.243 3.876 2.421 6.438 3.563.005.171.015.341.02.51.197-3.879.627-8.033 1.303-12.479l.875-5.187c1.123-6.137 2.494-11.754 4.093-16.896-3.763-1.648-6.395-5.4-6.395-9.771 0-5.891 4.775-10.667 10.666-10.667h149.334c5.891 0 10.666 4.776 10.666 10.667 0 4.375-2.637 8.125-6.406 9.771 1.6 5.143 2.981 10.758 4.104 16.896 1.179 6.442 1.885 12.316 2.157 17.666.005-.169.025-.339.031-.51 2.565-1.143 4.691-2.319 6.448-3.563 9.13-6.467 15-18.597 15-56.26s-5.87-49.793-15-56.26c-5.489-3.887-14.443-7.412-29.886-9.771-15.366-2.348-35.404-3.302-61.781-3.302m-1.365-53.334c-19.545 0-33.632 1.066-44.01 3.427-10.068 2.293-15.266 5.505-18.5 8.917-3.328 3.514-6.559 9.338-8.833 20.469-.279 1.363-.55 2.782-.792 4.26 18.225-3.752 42.183-5.073 73.5-5.073 29.701 0 52.785 1.178 70.635 4.5-.21-1.271-.414-2.502-.656-3.687-2.274-11.13-5.506-16.955-8.833-20.469-3.233-3.412-8.433-6.624-18.5-8.917-10.377-2.362-24.465-3.427-44.011-3.427\"/>",
  light: "<path fill=\"currentColor\" stroke=\"none\" d=\"M192 98.667a8 8 0 1 1 0 16h-10.667a8 8 0 0 1 0-16z\"/><path fill=\"currentColor\" stroke=\"none\" d=\"M126.635 0c66.563 0 88.789 11.697 94.386 64.27C248.651 76.14 256 99.66 256 144c0 49.525-9.176 73.044-45.531 83.396C202.24 249.948 175.913 256 128 256l-6.354-.042c-43.89-.541-68.24-7.029-76.104-28.552C9.176 217.056 0 193.53 0 144c0-42.745 6.828-66.145 32.073-78.406C37.438 11.889 59.513 0 126.635 0m-60 168c-2.343 5.956-4.372 13.047-5.927 21.542-4.946 27.033-.155 35.921 5.646 40.354 3.838 2.932 10.197 5.642 20.771 7.489C97.62 239.219 111.044 240 128 240s30.38-.781 40.875-2.615c10.574-1.847 16.933-4.557 20.771-7.489 5.801-4.433 10.592-13.321 5.646-40.354-1.555-8.495-3.584-15.586-5.927-21.542zM128 69.333c-26.449 0-46.809.945-62.583 3.355-15.833 2.418-25.717 6.13-32.167 10.697C21.735 91.542 16 106.308 16 144s5.735 52.458 17.25 60.615c2.55 1.805 5.65 3.438 9.427 4.948-.044-5.313.427-11.197 1.417-17.709l.875-5.187c1.313-7.176 2.967-13.643 4.927-19.469-2.692-1.288-4.563-4.014-4.563-7.198a8 8 0 0 1 8-8h149.334a8 8 0 0 1 8 8c0 3.187-1.877 5.912-4.573 7.198 1.96 5.827 3.624 12.291 4.937 19.469 1.576 8.612 2.337 16.207 2.282 22.896 3.781-1.511 6.886-3.142 9.437-4.948C234.265 196.458 240 181.692 240 144s-5.735-52.458-17.25-60.615c-6.45-4.567-16.334-8.279-32.167-10.698-15.774-2.41-36.134-3.354-62.583-3.354M126.635 16c-19.66 0-34.227 1.065-45.198 3.563C70.702 22.007 64.426 25.595 60.25 30c-4.246 4.482-7.794 11.369-10.187 23.083a119 119 0 0 0-1.136 6.605c18.83-4.734 44.453-6.355 79.073-6.355 32.892 0 57.668 1.443 76.208 5.646-.306-2.061-.618-4.028-1-5.896-2.393-11.713-5.942-18.6-10.187-23.083-4.174-4.405-10.452-7.993-21.188-10.437C160.863 17.065 146.296 16 126.635 16\"/>",
} as const;

export default function PrinterPrint(props: React.SVGProps<SVGSVGElement> & Partial<IconContextValue>) {
  const ctx = React.useContext(IconContext);
  const { size = ctx.size, color = ctx.color, weight = ctx.weight, mirrored = ctx.mirrored, ...rest } = props;
  const g = paths[weight] ?? paths.regular ?? paths.fill ?? paths.light ?? "";
  const transform = mirrored ? "scale(-1,1) translate(-256,0)" : undefined;

  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 256 256"
      xmlns="http://www.w3.org/2000/svg"
      color={color}
      {...rest}
    >
      <g transform={transform} dangerouslySetInnerHTML={{ __html: g }} />
    </svg>
  );
}