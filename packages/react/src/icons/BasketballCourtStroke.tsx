import * as React from "react";
import { IconContext, type IconContextValue } from "../core/context";

const paths = {
  fill: "",
  regular: "<path fill=\"none\" stroke=\"currentColor\" stroke-width=\"16\" stroke-linecap=\"round\" stroke-linejoin=\"round\" fill-rule=\"evenodd\" d=\"M12.512 1c10 0 12 1.833 12 11s-2 11-12 11-12-1.833-12-11 2-11 12-11m-1 5.04V3.008c-1.972.028-3.503.146-4.706.384-1.385.274-2.182.678-2.692 1.145-.414.38-.752.907-1.011 1.706 2.759.522 3.41 2.024 3.41 5.757l-.004.457c-.054 3.4-.763 4.8-3.406 5.299.259.8.597 1.328 1.01 1.707.51.467 1.308.871 2.693 1.145 1.203.238 2.734.355 4.706.383v-3.033c-2.47-.227-3-1.505-3-5.958s.53-5.733 3-5.96m2 0c2.471.227 3 1.506 3 5.96s-.529 5.731-3 5.958v3.033c1.972-.028 3.504-.145 4.706-.383 1.386-.274 2.183-.678 2.693-1.145.413-.38.75-.908 1.01-1.708-2.758-.522-3.408-2.022-3.408-5.755s.65-5.235 3.406-5.757c-.258-.799-.595-1.327-1.008-1.706-.51-.467-1.308-.871-2.693-1.145-1.202-.238-2.734-.356-4.706-.384zm-1 1.96c-.77 0-1.186.063-1.416.138-.157.05-.159.08-.17.096-.055.083-.183.34-.278 1.003-.094.653-.136 1.538-.136 2.763s.042 2.11.136 2.763c.095.663.223.92.278 1.003.011.016.013.045.17.096.23.075.647.138 1.416.138.77 0 1.186-.063 1.416-.138.157-.05.159-.08.17-.096.055-.083.183-.34.278-1.003.094-.653.136-1.538.136-2.763s-.042-2.11-.136-2.763c-.095-.663-.223-.92-.278-1.003-.011-.016-.013-.045-.17-.096-.23-.075-.646-.138-1.416-.138m-9.81.2c-.124 1.001-.19 2.244-.19 3.8s.066 2.798.19 3.799h.003c.738-.137 1.05-.32 1.194-.443.25-.215.614-.795.614-3.356S4.15 8.859 3.9 8.644c-.143-.123-.456-.306-1.194-.443zm19.62.001c-.738.137-1.051.32-1.195.443-.25.215-.614.793-.614 3.356s.364 3.141.614 3.356c.126.108.38.261.937.39l.258.053c.123-1.001.19-2.244.19-3.799 0-1.556-.067-2.798-.19-3.799\" clip-rule=\"evenodd\"/>",
  light: "",
} as const;

export default function BasketballCourtStroke(props: React.SVGProps<SVGSVGElement> & Partial<IconContextValue>) {
  const ctx = React.useContext(IconContext);
  const { size = ctx.size, color = ctx.color, weight = ctx.weight, mirrored = ctx.mirrored, ...rest } = props;
  const g = paths[weight] ?? paths.regular ?? paths.fill ?? paths.light ?? "";
  const transform = mirrored ? "scale(-1,1) translate(-256,0)" : undefined;

  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 256 256"
      xmlns="http://www.w3.org/2000/svg"
      color={color}
      {...rest}
    >
      <g transform={transform} dangerouslySetInnerHTML={{ __html: g }} />
    </svg>
  );
}