import * as React from "react";
import { IconContext, type IconContextValue } from "../core/context";

const paths = {
  fill: "<path fill=\"currentColor\" stroke=\"none\" fill-rule=\"evenodd\" d=\"M128 0c42.666 0 85.333 16 85.333 96 0 1.448-.022 2.875-.031 4.281 16.663 12.282 21.364 33.81 21.364 70.386C234.666 241.778 216.889 256 128 256c-88.89 0-106.667-14.222-106.667-85.333 0-36.668 4.724-58.214 21.49-70.479q-.069.046-.136.093c-.01-1.406-.02-2.833-.02-4.281 0-80 42.666-96 85.333-96m0 138.667c-26.667 0-32 5.333-32 32 0 26.666 5.333 32 32 32 26.666 0 32-5.334 32-32 0-26.667-5.334-32-32-32M64.083 90.74c15.494-4.037 36.266-5.407 63.917-5.407 27.646 0 48.413 1.382 63.906 5.417-.883-32.797-10.021-48.586-19.292-56.698C162.33 25.056 147.261 21.333 128 21.333c-19.262 0-34.33 3.723-44.615 12.72-9.27 8.11-18.418 23.897-19.302 56.687\" clip-rule=\"evenodd\"/>",
  regular: "<path fill=\"currentColor\" stroke=\"none\" d=\"M128.001 138.667c26.666 0 32 5.333 32 32 0 25.001-4.688 31.254-27.25 31.937l-4.75.063c-25.002 0-31.255-4.688-31.938-27.25l-.062-4.75c0-25.002 4.688-31.255 27.25-31.938zm0 21.333c-4.835 0-8.034.208-10.157.5-.292 2.123-.51 5.323-.51 10.167 0 4.836.219 8.033.51 10.156 2.123.292 5.321.51 10.157.51 4.844 0 8.044-.217 10.166-.51.292-2.123.5-5.321.5-10.156 0-4.843-.207-8.044-.5-10.167-2.122-.292-5.324-.5-10.166-.5\"/><path fill=\"currentColor\" stroke=\"none\" d=\"M128.001 0c42.666 0 85.333 16 85.333 96 0 1.448-.022 2.875-.031 4.281 16.663 12.282 21.364 33.81 21.364 70.386 0 71.111-17.777 85.333-106.666 85.333-88.89 0-106.667-14.222-106.667-85.333 0-36.668 4.724-58.214 21.49-70.479q-.069.046-.136.093c-.01-1.406-.02-2.833-.02-4.281 0-80 42.666-96 85.333-96m0 106.667c-21.892 0-38.21.893-50.542 3.021-12.323 2.126-18.936 5.209-22.802 8.302-6.841 5.473-11.99 16.692-11.99 52.677s5.149 47.203 11.99 52.677c3.866 3.093 10.479 6.175 22.802 8.302 12.332 2.128 28.65 3.021 50.542 3.021 21.891 0 38.209-.893 50.541-3.021 12.324-2.127 18.936-5.209 22.802-8.302 6.841-5.474 11.99-16.693 11.99-52.677 0-35.985-5.149-47.204-11.99-52.677-3.866-3.093-10.478-6.176-22.802-8.302-12.332-2.128-28.65-3.021-50.541-3.021M64.084 90.74c15.494-4.037 36.266-5.407 63.917-5.407 27.646 0 48.413 1.382 63.906 5.417-.883-32.797-10.021-48.586-19.292-56.698-10.284-8.996-25.353-12.719-44.614-12.719-19.262 0-34.331 3.723-44.615 12.72-9.27 8.11-18.418 23.897-19.302 56.687\"/>",
  light: "<path fill=\"currentColor\" stroke=\"none\" d=\"M128 138.667c26.666 0 32 5.333 32 32 0 25.001-4.688 31.254-27.25 31.937l-4.75.063c-25.002 0-31.255-4.688-31.938-27.25l-.062-4.75c0-25.002 4.688-31.255 27.25-31.938zm0 16c-6.348 0-10.318.334-12.875.885-.864.186-1.41.375-1.729.5-.126.318-.322.864-.511 1.74-.551 2.557-.885 6.527-.885 12.875s.334 10.318.885 12.875c.187.867.385 1.41.511 1.729.318.125.861.323 1.729.51 2.557.551 6.527.886 12.875.886s10.318-.335 12.875-.886a11 11 0 0 0 1.739-.51 11 11 0 0 0 .5-1.729c.551-2.557.886-6.528.886-12.875s-.335-10.318-.886-12.875c-.188-.873-.374-1.422-.5-1.74-.318-.125-.867-.312-1.739-.5-2.557-.551-6.528-.885-12.875-.885\"/><path fill=\"currentColor\" stroke=\"none\" d=\"M128 0c42.666 0 85.333 16 85.333 96 0 1.448-.022 2.875-.031 4.281 16.663 12.282 21.364 33.81 21.364 70.386C234.666 241.778 216.889 256 128 256c-88.89 0-106.667-14.222-106.667-85.333 0-44.166 6.862-66.376 33.354-76.875-4.557 1.803-8.54 3.939-12 6.489-.01-1.406-.02-2.833-.02-4.281 0-80 42.666-96 85.333-96m0 101.333c-21.975 0-38.657.897-51.448 3.105-12.78 2.205-20.375 5.511-25.219 9.385-9.02 7.216-14 20.965-14 56.844s4.98 49.627 14 56.843c4.844 3.874 12.44 7.181 25.219 9.386C89.342 239.103 106.025 240 128 240c21.974 0 38.657-.897 51.448-3.104 12.779-2.205 20.374-5.512 25.218-9.386 9.02-7.216 14-20.964 14-56.843s-4.98-49.628-14-56.844c-4.844-3.874-12.439-7.18-25.218-9.385-12.791-2.208-29.474-3.105-51.448-3.105M128 16c-19.781 0-36.423 3.793-48.136 14.042-10.935 9.57-20.516 27.427-21.146 62.28-.363.12-.716.263-1.073.386 16.03-5.546 38.671-7.375 70.355-7.375 33.015 0 56.216 1.974 72.343 8.084a75 75 0 0 0-3.072-1.094c-.63-34.854-10.201-52.712-21.136-62.281C164.422 19.792 147.781 16 128 16\"/>",
} as const;

export default function LockSecuritySafe(props: React.SVGProps<SVGSVGElement> & Partial<IconContextValue>) {
  const ctx = React.useContext(IconContext);
  const { size = ctx.size, color = ctx.color, weight = ctx.weight, mirrored = ctx.mirrored, ...rest } = props;
  const g = paths[weight] ?? paths.regular ?? paths.fill ?? paths.light ?? "";
  const transform = mirrored ? "scale(-1,1) translate(-256,0)" : undefined;

  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 256 256"
      xmlns="http://www.w3.org/2000/svg"
      color={color}
      {...rest}
    >
      <g transform={transform} dangerouslySetInnerHTML={{ __html: g }} />
    </svg>
  );
}