import * as React from "react";
import { IconContext, type IconContextValue } from "../core/context";

const paths = {
  fill: "",
  regular: "",
  light: "<path fill=\"none\" stroke=\"currentColor\" stroke-width=\"12\" stroke-linecap=\"round\" stroke-linejoin=\"round\" fill-rule=\"evenodd\" d=\"M13.121.005c4.603.075 6.457 1.064 7.098 4.785q-.04-.013-.08-.024c3.495 1.123 4.373 3.716 4.373 9.234l-.006.762C24.38 22.436 22.2 24 12.512 24l-.914-.005C2.388 23.89.512 22.073.512 14c0-5.708.938-8.287 4.743-9.347a10 10 0 0 0-.45.136C5.476.91 7.464 0 12.513 0zM9.536 13.832a61 61 0 0 0-7.518.84c.057 3.73.61 5.389 1.704 6.3.6.5 1.505.899 2.962 1.16 1.46.263 3.352.368 5.828.368s4.368-.105 5.828-.367c1.457-.262 2.362-.66 2.962-1.16 1.094-.912 1.646-2.57 1.703-6.3a61 61 0 0 0-7.518-.841C15.359 15.615 14.706 16 12.512 16l-.445-.006c-1.839-.056-2.412-.506-2.53-2.162m2.976-2.332c-.595 0-.967.031-1.207.083a1 1 0 0 0-.163.047c-.012.03-.03.081-.047.163-.052.24-.083.612-.083 1.207s.031.967.083 1.207c.017.081.035.132.047.162.03.012.08.03.163.048.24.052.612.083 1.207.083s.967-.031 1.207-.083a1 1 0 0 0 .162-.048c.012-.03.03-.08.048-.162.052-.24.083-.612.083-1.207s-.031-.967-.083-1.207a1 1 0 0 0-.048-.163 1 1 0 0 0-.162-.047c-.24-.052-.612-.083-1.207-.083m0-6c-2.476 0-4.368.105-5.828.367-1.457.262-2.362.66-2.962 1.16-1.077.898-1.629 2.517-1.701 6.122a62 62 0 0 1 7.508-.819l-.002.058c.09-1.972.704-2.388 2.985-2.388l.445.006c1.897.057 2.444.535 2.537 2.324 2.513.12 5.02.394 7.508.82-.072-3.606-.623-5.225-1.7-6.123-.6-.5-1.505-.898-2.962-1.16-1.46-.262-3.352-.367-5.828-.367m0-4c-3.376 0-4.68.449-5.353 1.247-.289.343-.544.85-.74 1.643q-.274.05-.533.107C7.56 4.13 9.726 4 12.512 4l.914.005c2.3.026 4.142.16 5.612.47q-.212-.046-.434-.085c-.196-.794-.45-1.3-.74-1.643-.672-.798-1.976-1.247-5.352-1.247\" clip-rule=\"evenodd\"/>",
} as const;

export default function ToolBoxLight(props: React.SVGProps<SVGSVGElement> & Partial<IconContextValue>) {
  const ctx = React.useContext(IconContext);
  const { size = ctx.size, color = ctx.color, weight = ctx.weight, mirrored = ctx.mirrored, ...rest } = props;
  const g = paths[weight] ?? paths.regular ?? paths.fill ?? paths.light ?? "";
  const transform = mirrored ? "scale(-1,1) translate(-256,0)" : undefined;

  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 256 256"
      xmlns="http://www.w3.org/2000/svg"
      color={color}
      {...rest}
    >
      <g transform={transform} dangerouslySetInnerHTML={{ __html: g }} />
    </svg>
  );
}